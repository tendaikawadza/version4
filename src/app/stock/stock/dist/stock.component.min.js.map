{"version":3,"sources":["stock.component.ts"],"names":["core_1","require","forms_1","StockComponent","productService","fb","messageService","route","this","successMessage","errMessage","updateId","snapshot","params","prototype","ngOnInit","addProductForm","group","productid","Validators","required","productname","units","category","description","editProduct","console","log","addProduct","_this","valid","value","subscribe","data","add","severity","summary","detail","__decorate","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBACAC,QAAAD,QAAA,kBAWAE,eAAA,WAME,SAAAA,EAAoBC,EAAqCC,EAAyBC,EAAwCC,GAAtGC,KAAAJ,eAAAA,EAAqCI,KAAAH,GAAAA,EAAyBG,KAAAF,eAAAA,EAAwCE,KAAAD,MAAAA,EAH1HC,KAAAC,eAAyB,GACzBD,KAAAE,WAAqB,GAGnBF,KAAKG,SAAWJ,EAAMK,SAASC,OAAW,GA8C9C,OA3CEV,EAAAW,UAAAC,SAAA,WACEP,KAAKQ,eAAiBR,KAAKH,GAAGY,MAAM,CAClCC,UAAW,CAAC,GAAI,CAAChB,QAAAiB,WAAWC,WAC5BC,YAAa,CAAC,GAAI,CAACnB,QAAAiB,WAAWC,WAC9BE,MAAO,CAAC,GAAI,CAACpB,QAAAiB,WAAWC,WACxBG,SAAU,CAAC,GAAI,CAACrB,QAAAiB,WAAWC,WAC3BI,YAAa,CAAC,GAAI,CAACtB,QAAAiB,WAAWC,aAEhCZ,KAAKiB,eAGPtB,EAAAW,UAAAW,YAAA,WACMjB,KAAKG,UACbe,QAAQC,IAAInB,KAAKG,WAIfR,EAAAW,UAAAc,WAAA,WAAA,IAAAC,EAAArB,KACMA,KAAKQ,eAAec,QACtBJ,QAAQC,IAAInB,KAAKQ,eAAee,OAChCvB,KAAKJ,eAAewB,WAAWpB,KAAKQ,eAAee,OAAOC,UAAU,SAACC,GACnEP,QAAQC,IAAIM,GACRA,GACFJ,EAAKnB,WAAa,GAClBmB,EAAKvB,eAAe4B,IAAI,CAAEC,SAAU,UAAWC,QAAS,4CAA6CC,OAAQ,yBAK7GR,EAAKvB,eAAe4B,IAAI,CAAEC,SAAU,UAAWC,QAAS,kFAAmFC,OAAQ,uBAEnJR,EAAKpB,eAAiB,QAzCnBN,EAAcmC,WAAA,CAL1BtC,OAAAuC,UAAU,CACTC,SAAU,YACVC,YAAa,yBACbC,UAAW,CAAC,4BAEDvC,GAAb,GAAawC,QAAAxC,eAAAA","file":"stock.component.min.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { StockService } from 'src/app/service/stock.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { ActivatedRoute } from '@angular/router';\nimport { timeStamp } from 'console';\n@Component({\n  selector: 'app-stock',\n  templateUrl: './stock.component.html',\n  styleUrls: ['./stock.component.css']\n})\nexport class StockComponent implements OnInit {\n  product: any;\n  updateId: any;\n  successMessage: string = \"\";\n  errMessage: string = \"\";\n  addProductForm: FormGroup;\n  constructor(private productService: StockService, public fb: FormBuilder, private messageService: MessageService, private route: ActivatedRoute) {\n    this.updateId = route.snapshot.params['id'];\n  }\n\n  ngOnInit(): void {\n    this.addProductForm = this.fb.group({\n      productid: ['', [Validators.required]],\n      productname: ['', [Validators.required]],\n      units: ['', [Validators.required]],\n      category: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n    });\n    this.editProduct();\n  }\n\n  editProduct() {\n    if (this.updateId) {\nconsole.log(this.updateId);\n    }\n  }\n\n  addProduct() {\n    if (this.addProductForm.valid) {\n      console.log(this.addProductForm.value);\n      this.productService.addProduct(this.addProductForm.value).subscribe((data: any) => {\n        console.log(data);\n        if (data) {\n          this.errMessage = \"\";\n          this.messageService.add({ severity: 'success', summary: 'Product successfully added to the catalog', detail: 'Via MessageService' });\n\n          // this.successMessage = \"Product successfully added to the catalog\";\n        }\n        else {\n          this.messageService.add({ severity: 'success', summary: 'Product could not be Added to the catalog : Check Specification of your product', detail: 'Via MessageService' });\n\n          this.successMessage = \"\";\n          // this.errMessage = \"Product could not be Added to the catalog : Check Specification of your product\";\n        }\n\n      })\n    }\n\n\n\n  }\n\n\n}\n"]}