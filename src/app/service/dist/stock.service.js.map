{"version":3,"sources":["stock.service.ts"],"names":[],"mappings":";;;;;;;;AAeA,sCAA2C;AAC3C,4DAA2D;AAO3D;IAIE,sBAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAF3B,SAAI,GAAC,yBAAW,CAAC,MAAM,CAAC;IAEM,CAAC;IAC/B,+BAAQ,GAAf;QAED,OAAQ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,yBAAyB,CAAC,CAAC;IAEzD,CAAC;IAGM,+BAAQ,GAAf,UAAgB,QAAkB;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,wBAAwB,EAAC,QAAQ,CAAC,CAAC;IAEjE,CAAC;IACM,kCAAW,GAAlB,UAAmB,QAAkB;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,2BAA2B,EAAC,QAAQ,CAAC,CAAC;IAEpE,CAAC;IAGM,kCAAW,GAAlB,UAAmB,OAAe;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAM,CAAA,CAAQ,qCAAqC,CAAC,CAAC;IAEvE,CAAC;IACM,kCAAW,GAAlB,UAAmB,QAAkB;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,8BAA8B,EAAC,QAAQ,CAAC,CAAC;IAEvE,CAAC;IACM,iCAAU,GAAjB,UAAkB,OAAW;QAC5B,IAAI,GAAG,GAAC,IAAI,CAAC,IAAI,GAAC,kBAAkB,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,IAAI,GAAC;YACP,WAAW,EAAE,CAAC;YACd,aAAa,EAAE,OAAO;YACtB,oBAAoB,EAAE,MAAM;YAC5B,iBAAiB,EAAE,KAAK;YACxB,OAAO,EAAE,EAAE;SACd,CAAA;QACC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,EAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,qCAAc,GAAd;QACE,IAAI,GAAG,GAAC,IAAI,CAAC,IAAI,GAAC,mBAAmB,CAAC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,CAAC,CAAC;IAC/B,CAAC;IA9CU,YAAY;QAHxB,iBAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,YAAY,CA+CrB;IAAD,mBAAC;CA/CJ,AA+CI,IAAA;AA/CS,oCAAY","file":"stock.service.js","sourcesContent":["import { HttpClient, HttpErrorResponse, HttpResponse } from \"@angular/common/http\";\nimport { Token } from \"@angular/compiler\";\nimport { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Observable, observable, Subscription } from \"rxjs\";\nimport { NotificationType } from \"../enum/notificaton-type.enum\";\nimport { CustomHttpRespone } from \"../model/custom-http-response\";\nimport { User } from \"../model/user\";\nimport { AuthenticationService } from \"../service/authentication.service\";\nimport { NotificationService } from \"../service/notification.service\";\n\n\n\n\n\nimport { Injectable } from '@angular/core';\nimport { environment } from \"src/environments/environment\";\nimport { Stock } from \"../model/stock\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StockService {\n\n  private host=environment.apiUrl;\n\n  constructor(private http:HttpClient) {}\n   public getStock():Observable<Stock  [] |HttpErrorResponse>{\n\n  return  this.http.get<Stock[]>('${this.host}/stock/list');\n\n   }\n\n\n   public addStock(formData: FormData): Observable<Stock|HttpErrorResponse>{\n    return this.http.post<Stock>('${this.host}/stock/add',formData);\n\n   }\n   public updateStock(formData: FormData): Observable<Stock|HttpErrorResponse>{\n    return this.http.post<Stock>('${this.host}/stock/update',formData);\n\n   }\n\n\n   public deleteStock(stockId: number): Observable<any|HttpErrorResponse>{\n    return this.http.delete<Stock>('${this.host}/stock/delete/${userId}');\n\n   }\n   public addProducts(formData: FormData): Observable<Stock|HttpErrorResponse>{\n    return this.http.post<Stock>('${this.host}/product/product',formData);\n\n   }\n   public addProduct(product:any): Observable<any> {\n    let url=this.host+'/product/product';\n    console.log(product);\n    let data={\n      \"productId\": 1,\n      \"productName\": \"mtisi\",\n      \"productDescription\": \"bond\",\n      \"productCategory\": \"vie\",\n      \"units\": 20\n  }\n    return this.http.post<any>(url,data);\n  }\n \n  getAllProducts(){\n    let url=this.host+'/product/products';\n  return this.http.get<any>(url);\n  }\n   }\n\n"]}