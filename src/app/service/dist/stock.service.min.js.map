{"version":3,"sources":["stock.service.ts"],"names":["core_1","require","environment_1","StockService","http","this","host","environment","apiUrl","prototype","getStock","get","addStock","formData","post","updateStock","deleteStock","stockId","addProducts","addProduct","product","url","console","log","productId","productName","productDescription","productCategory","units","getAllProducts","__decorate","Injectable","providedIn","exports"],"mappings":"6YAeA,IAAAA,OAAAC,QAAA,iBACAC,cAAAD,QAAA,gCAOAE,aAAA,WAIE,SAAAA,EAAoBC,GAAAC,KAAAD,KAAAA,EAFZC,KAAAC,KAAKJ,cAAAK,YAAYC,OA6CxB,OA1COL,EAAAM,UAAAC,SAAP,WAED,OAAQL,KAAKD,KAAKO,IAAa,4BAKvBR,EAAAM,UAAAG,SAAP,SAAgBC,GACf,OAAOR,KAAKD,KAAKU,KAAY,yBAAyBD,IAGhDV,EAAAM,UAAAM,YAAP,SAAmBF,GAClB,OAAOR,KAAKD,KAAKU,KAAY,4BAA4BD,IAKnDV,EAAAM,UAAAO,YAAP,SAAmBC,GAClB,OAAOZ,KAAKD,KAAW,OAAQ,wCAGzBD,EAAAM,UAAAS,YAAP,SAAmBL,GAClB,OAAOR,KAAKD,KAAKU,KAAY,+BAA+BD,IAGtDV,EAAAM,UAAAU,WAAP,SAAkBC,GACjB,IAAIC,EAAIhB,KAAKC,KAAK,mBAClBgB,QAAQC,IAAIH,GAQZ,OAAOf,KAAKD,KAAKU,KAAUO,EAPlB,CACPG,UAAa,EACbC,YAAe,QACfC,mBAAsB,OACtBC,gBAAmB,MACnBC,MAAS,MAKbzB,EAAAM,UAAAoB,eAAA,WACE,IAAIR,EAAIhB,KAAKC,KAAK,oBACpB,OAAOD,KAAKD,KAAKO,IAASU,IA7CflB,EAAY2B,WAAA,CAHxB9B,OAAA+B,WAAW,CACVC,WAAY,UAED7B,GAAb,GAAa8B,QAAA9B,aAAAA","file":"stock.service.min.js","sourcesContent":["import { HttpClient, HttpErrorResponse, HttpResponse } from \"@angular/common/http\";\nimport { Token } from \"@angular/compiler\";\nimport { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Observable, observable, Subscription } from \"rxjs\";\nimport { NotificationType } from \"../enum/notificaton-type.enum\";\nimport { CustomHttpRespone } from \"../model/custom-http-response\";\nimport { User } from \"../model/user\";\nimport { AuthenticationService } from \"../service/authentication.service\";\nimport { NotificationService } from \"../service/notification.service\";\n\n\n\n\n\nimport { Injectable } from '@angular/core';\nimport { environment } from \"src/environments/environment\";\nimport { Stock } from \"../model/stock\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StockService {\n\n  private host=environment.apiUrl;\n\n  constructor(private http:HttpClient) {}\n   public getStock():Observable<Stock  [] |HttpErrorResponse>{\n\n  return  this.http.get<Stock[]>('${this.host}/stock/list');\n\n   }\n\n\n   public addStock(formData: FormData): Observable<Stock|HttpErrorResponse>{\n    return this.http.post<Stock>('${this.host}/stock/add',formData);\n\n   }\n   public updateStock(formData: FormData): Observable<Stock|HttpErrorResponse>{\n    return this.http.post<Stock>('${this.host}/stock/update',formData);\n\n   }\n\n\n   public deleteStock(stockId: number): Observable<any|HttpErrorResponse>{\n    return this.http.delete<Stock>('${this.host}/stock/delete/${userId}');\n\n   }\n   public addProducts(formData: FormData): Observable<Stock|HttpErrorResponse>{\n    return this.http.post<Stock>('${this.host}/product/product',formData);\n\n   }\n   public addProduct(product:any): Observable<any> {\n    let url=this.host+'/product/product';\n    console.log(product);\n    let data={\n      \"productId\": 1,\n      \"productName\": \"mtisi\",\n      \"productDescription\": \"bond\",\n      \"productCategory\": \"vie\",\n      \"units\": 20\n  }\n    return this.http.post<any>(url,data);\n  }\n \n  getAllProducts(){\n    let url=this.host+'/product/products';\n  return this.http.get<any>(url);\n  }\n   }\n\n"]}